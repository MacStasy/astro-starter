---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

interface Props {
  imagePath: string;
  altText: string;
  name: string;
  width: number;
  height: number;
  icon: string;
}

const block = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/*.{jpeg,jpg,png,gif}",
  { eager: true }
);

const imageSrc = images[block.imagePath]?.default;
const src =
  typeof imageSrc === "string"
    ? imageSrc.replace(/^\./, "/_cloudcannon")
    : imageSrc ?? block.imagePath;

if (!src) {
  throw new Error(
    `"${block.imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
  );
}
---

<style lang="scss">
  @use "sass:math";

  $default-min-bp: 22.5rem;
  $default-max-bp: 48rem;

  @function round($number, $decimals: 0) {
    $n: 1;

    @if $decimals >0 {
      @for $i from 1 through $decimals {
        $n: $n * 10;
      }
    }

    @return math.div(math.round($number * $n), $n);
  }

  @function fluid(
    $min-size,
    $max-size,
    $min-breakpoint: $default-min-bp,
    $max-breakpoint: $default-max-bp,
    $unit: vw
  ) {
    $slope: math.div($max-size - $min-size, $max-breakpoint - $min-breakpoint);
    $slope-to-unit: round($slope * 100, 3);
    $intercept: round($min-size - $slope * $min-breakpoint, 3);
    $min-size: round($min-size, 3);
    $max-size: round($max-size, 3);
    @return clamp(
      #{$min-size},
      #{$slope-to-unit}#{$unit} + #{$intercept},
      #{$max-size}
    );
  }

  @media screen and (min-width: 768px) {
    $default-min-bp: 48rem !global;
    $default-max-bp: 90rem !global;
  }

  h1 {
    font-size: #{fluid(2.4375rem, 3.8125rem)};
  }
</style>

<div class="card">
  <h2><i class=`fa-solid fa-${ block.icon }`></i>{block.name}</h2>
  <Image
    src={src}
    alt={block.altText}
    width={block.width}
    height={block.height}
  />
</div>
